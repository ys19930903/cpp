vector:
	连续存储结构,支持高效的随机访问和尾端插入/删除操作,但是其他位置的插入/删除操作效率低下;
	相当于一个数组,但是与数组的区别:内存空间的扩展.

deque:双端队列 double-end queue
	连续存储结构,不同之处在于 deque提供了两级数组结构,第一级完全类似于vector,代表实际容器;另一级维护容易的首位位置.因此deque除了具有vector的所有功能外,还支持高效的首/尾端插入/删		除操作.
	优点:支持随机访问,可在两端push pop
	缺点:占用内存多.

list:
	非连续存储结构,具有双链表结构,每个元素维护一对向前和向后的指针,因此支持向前/向后遍历.
	支持高效的随机插入/删除操作,但是随机访问效率太低,并且由于需要维护指针,开销也比较大.



使用区别:
	如果需要高效的随机存取,而且不在乎插入和删除的效率,使用vector;
	如果需要大量的插入和删除,而不关心随机存取,则应使用list;
	如果需要随机存取,而且关心两端数据的插入和删除,则使用deque;
